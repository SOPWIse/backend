{"openapi":"3.0.0","paths":{"/auth/register":{"post":{"operationId":"AuthController_register","summary":"Register User","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterDto"}}}},"responses":{"200":{"description":""}},"tags":["Authentication"]}},"/auth/login":{"post":{"operationId":"AuthController_login","summary":"Login","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginDto"}}}},"responses":{"200":{"description":""}},"tags":["Authentication"]}},"/auth/sso-login":{"post":{"operationId":"AuthController_ssoLogin","summary":"SSO Login","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterDto"}}}},"responses":{"200":{"description":""}},"tags":["Authentication"]}},"/auth/admin":{"post":{"operationId":"AuthController_getAdminData","summary":"TEST","parameters":[],"responses":{"201":{"description":""}},"tags":["Authentication"]}},"/auth/author":{"post":{"operationId":"AuthController_getAuthorData","summary":"TEST","parameters":[],"responses":{"201":{"description":""}},"tags":["Authentication"]}},"/user/me":{"get":{"operationId":"UserController_getCurrentUser","summary":"Get current user","parameters":[],"responses":{"200":{"description":""}},"tags":["Users"]}},"/user/all":{"get":{"operationId":"UserController_getAllUsers","summary":"Get all users with pagination","parameters":[{"name":"page","required":false,"in":"query","schema":{"minimum":1,"default":1,"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":1,"default":10,"type":"number"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"searchFields","required":false,"in":"query","description":"Fields to search in","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","schema":{"type":"string"}},{"name":"sortOrder","required":false,"in":"query","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"200":{"description":"Returns paginated list of users"}},"tags":["Users"]}},"/user/{id}":{"patch":{"operationId":"UserController_updateUser","summary":"Update user by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserDto"}}}},"responses":{"200":{"description":""}},"tags":["Users"]},"get":{"operationId":"UserController_getUserById","summary":"Get user by id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Users"]}},"/health":{"get":{"operationId":"HealthController_check","summary":"Health Check","parameters":[],"responses":{"200":{"description":"Health Check run correctly."},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"tags":["Health Check"]}},"/files":{"post":{"operationId":"FileManagerController_uploadFile","summary":"","parameters":[],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/CreateFileDTO"}}}},"responses":{"200":{"description":""}},"tags":["File Settings API"]}},"/files/all":{"get":{"operationId":"FileManagerController_getAllFiles","summary":"Get all SOPs","description":"Retrieves a paginated list of all SOPs. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"page","required":false,"in":"query","schema":{"minimum":1,"default":1,"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":1,"default":10,"type":"number"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"searchFields","required":false,"in":"query","description":"Fields to search in","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","schema":{"type":"string"}},{"name":"sortOrder","required":false,"in":"query","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"200":{"description":"Successfully retrieved the list of SOPs."},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"tags":["File Settings API"]}},"/files/{id}":{"get":{"operationId":"FileManagerController_findOne","summary":"Get a file by ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the file with the given ID."}},"tags":["File Settings API"]},"put":{"operationId":"FileManagerController_update","summary":"Update a file by ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFileDTO"}}}},"responses":{"200":{"description":"The file has been successfully updated."}},"tags":["File Settings API"]},"delete":{"operationId":"FileManagerController_remove","summary":"Delete a file by ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"The file has been successfully deleted."}},"tags":["File Settings API"]}},"/approvals":{"post":{"operationId":"ApprovalsController_createApproval","summary":"Create approval","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApprovalDto"}}}},"responses":{"201":{"description":""}},"tags":["Approvals"]}},"/approvals/all":{"get":{"operationId":"ApprovalsController_getAllUsers","summary":"Get all approvals with pagination","parameters":[{"name":"page","required":false,"in":"query","schema":{"minimum":1,"default":1,"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":1,"default":10,"type":"number"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"searchFields","required":false,"in":"query","description":"Fields to search in","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","schema":{"type":"string"}},{"name":"sortOrder","required":false,"in":"query","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"200":{"description":"Returns paginated list of approvals"}},"tags":["Approvals"]}},"/approvals/{id}":{"patch":{"operationId":"ApprovalsController_updateApproval","summary":"Update approval","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateApprovalDto"}}}},"responses":{"200":{"description":""}},"tags":["Approvals"]}},"/sop/all":{"get":{"operationId":"SopController_getAllSops","summary":"Get all SOPs","description":"Retrieves a paginated list of all SOPs. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"page","required":false,"in":"query","schema":{"minimum":1,"default":1,"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":1,"default":10,"type":"number"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"searchFields","required":false,"in":"query","description":"Fields to search in","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","schema":{"type":"string"}},{"name":"sortOrder","required":false,"in":"query","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"200":{"description":"Successfully retrieved the list of SOPs."},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/{id}":{"get":{"operationId":"SopController_getSopById","summary":"Get SOP by ID","description":"Retrieves a specific SOP by its ID. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the SOP details with its content."},"401":{"description":"Unauthorized"},"404":{"description":"SOP not found"}},"tags":["SOPs"],"security":[{"bearer":[]}]},"patch":{"operationId":"SopController_updateSop","summary":"Update SOP by ID","description":"Updates the details of a specific SOP by its ID. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"SOP updated successfully."},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"SOP not found"}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/flow-data/{id}":{"patch":{"operationId":"SopController_updateFlowData","summary":"Update SOP by ID","description":"Updates the flow data of a specific SOP by its ID.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"SOP updated successfully."},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"},"404":{"description":"SOP not found"}},"tags":["SOPs"],"security":[{"bearer":[]}]},"get":{"operationId":"SopController_getFlowData","summary":"Get flow data of SOP by ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""},"401":{"description":"Unauthorized"},"404":{"description":"SOP not found"}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop":{"post":{"operationId":"SopController_createSop","summary":"Create a new SOP","description":"Creates a new SOP with the provided data. Only accessible to ADMIN and AUTHOR roles.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSopDto"}}}},"responses":{"201":{"description":"SOP created successfully."},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/approve/{id}":{"patch":{"operationId":"SopController_approve","summary":"Approve a SOP","description":"Approves a SOP. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/reject/{id}":{"patch":{"operationId":"SopController_reject","summary":"Reject a SOP","description":"Rejects a SOP. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/publish/{id}":{"patch":{"operationId":"SopController_publish","summary":"Publish a SOP","description":"Publishes a SOP. Only accessible to ADMIN and AUTHOR roles.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/{id}/comment":{"post":{"operationId":"SopController_createComment","summary":"Add comments to SOP","description":"Needs content id, comment body to create comment","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCommentDto"}}}},"responses":{"201":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/{id}/comment/{comment_id}":{"patch":{"operationId":"SopController_resolveComment","summary":"Add comments to SOP","description":"Needs content id, comment body to create comment","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"comment_id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/sop/my-sop/{id}":{"get":{"operationId":"SopController_getMySop","summary":"Get SOP by user ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["SOPs"],"security":[{"bearer":[]}]}},"/comment":{"post":{"operationId":"CommentController_createComment","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCommentDto"}}}},"responses":{"201":{"description":""}}}},"/comment/{id}":{"patch":{"operationId":"CommentController_updateComment","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}}},"delete":{"operationId":"CommentController_delete","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}}}},"/comment/{content_id}":{"get":{"operationId":"CommentController_getCommentByContentId","parameters":[{"name":"content_id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}}}},"/experiment-logs":{"post":{"operationId":"ExperimentLogsController_createLog","summary":"Create a new experiment log","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExperimentLogDto"}}}},"responses":{"201":{"description":"The experiment log has been successfully created."},"401":{"description":"Unauthorized"}},"tags":["Experiment Logs"]}},"/experiment-logs/all":{"get":{"operationId":"ExperimentLogsController_getLogs","summary":"Create a new experiment log","parameters":[{"name":"page","required":false,"in":"query","schema":{"minimum":1,"default":1,"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"minimum":1,"default":10,"type":"number"}},{"name":"search","required":false,"in":"query","schema":{"type":"string"}},{"name":"searchFields","required":false,"in":"query","description":"Fields to search in","schema":{"type":"array","items":{"type":"string"}}},{"name":"sortBy","required":false,"in":"query","schema":{"type":"string"}},{"name":"sortOrder","required":false,"in":"query","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"201":{"description":"The experiment log has been successfully created."}},"tags":["Experiment Logs"]}},"/experiment-logs/step":{"post":{"operationId":"ExperimentLogsController_createStep","summary":"Create a new step for an experiment log","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StepDto"}}}},"responses":{"201":{"description":"The step has been successfully created."}},"tags":["Experiment Logs"]}},"/experiment-logs/{id}":{"patch":{"operationId":"ExperimentLogsController_updateLog","summary":"Update an experiment log","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"The experiment log has been successfully updated."}},"tags":["Experiment Logs"]},"delete":{"operationId":"ExperimentLogsController_deleteLog","summary":"Delete an experiment log","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"The experiment log has been successfully deleted."}},"tags":["Experiment Logs"]},"get":{"operationId":"ExperimentLogsController_getLogById","summary":"Get an experiment log by its ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"The experiment log was found."}},"tags":["Experiment Logs"]}},"/experiment-logs/sop/{sopId}":{"get":{"operationId":"ExperimentLogsController_getLogsBySopId","summary":"Get experiment logs by SOP ID","parameters":[{"name":"sopId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Experiment logs for the given SOP ID."}},"tags":["Experiment Logs"]}},"/experiment-logs/user/{userId}":{"get":{"operationId":"ExperimentLogsController_getLogsByUserId","summary":"Get experiment logs by User ID","parameters":[{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Experiment logs for the given User ID."}},"tags":["Experiment Logs"]}},"/experiment-logs/{logId}/steps":{"get":{"operationId":"ExperimentLogsController_getStepsByLogId","summary":"Get steps for a specific experiment log","parameters":[{"name":"logId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Steps for the specified experiment log."}},"tags":["Experiment Logs"]}},"/experiment-logs/step/{id}":{"get":{"operationId":"ExperimentLogsController_getStepById","summary":"Get a specific step by its ID","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"The step was found."}},"tags":["Experiment Logs"]}},"/experiment-logs/generate-pdf/{id}":{"post":{"operationId":"ExperimentLogsController_getPDFReport","summary":"Get audit report pdf url","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Experiment Logs"]}},"/analytics":{"post":{"operationId":"AnalyticsController_runAnalytics","summary":"Run multi-model analytics","description":"\n\t\t## Execute analytics operations across multiple data models in a single request\n\n\t\t### Filter Parameters\n\t\t| Parameter     | Type          | Description                                                                 |\n\t\t|---------------|---------------|-----------------------------------------------------------------------------|\n\t\t| `filters`   | Object        | Direct Prisma where clause filters (e.g., `{ status: 'active' }`)         |\n\t\t| `search`    | string        | Search term to look for                                                     |\n\t\t| `searchFields`| string[]    | Fields to search within (e.g., `[\"name\", \"email\"]`)                       |\n\t\t| `dateField` | string        | Field to use for date filtering                                             |\n\t\t| `startDate` | string/Date   | Start date for date range filtering                                         |\n\t\t| `endDate`   | string/Date   | End date for date range filtering                                           |\n\n\t\t### Operation Examples\n\t\t**Count Operation:**\n\t\t```json\n\t\t{\n\t\t\t\"model\": \"User\",\n\t\t\t\"operation\": \"count\",\n\t\t\t\"filter\": {\n\t\t\t\t\"filters\": { \"status\": \"active\" }\n\t\t\t}\n\t\t}\n\t\t```\n\n\t\t**GroupBy Operation:**\n\t\t```json\n\t\t{\n\t\t\t\"model\": \"Order\",\n\t\t\t\"operation\": \"groupBy\",\n\t\t\t\"args\": {\n\t\t\t\t\"by\": [\"status\"],\n\t\t\t\t\"aggregations\": {\n\t\t\t\t\t\"_sum\": { \"amount\": true }\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"filter\": {\n\t\t\t\t\"dateField\": \"createdAt\",\n\t\t\t\t\"startDate\": \"2023-01-01\",\n\t\t\t\t\"endDate\": \"2023-12-31\"\n\t\t\t}\n\t\t}\n\t\t```\n\n\t\t**Multi-Model Request:**\n\t\t```json\n\t\t{\n\t\t\t\"models\": [\n\t\t\t\t{\n\t\t\t\t\t\"model\": \"User\",\n\t\t\t\t\t\"operation\": \"count\",\n\t\t\t\t\t\"filter\": { ... }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"model\": \"Product\",\n\t\t\t\t\t\"operation\": \"findMany\",\n\t\t\t\t\t\"args\": { \"take\": 5 },\n\t\t\t\t\t\"filter\": { ... }\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\t```\n\t\t","parameters":[],"requestBody":{"required":true,"description":"Analytics request payload","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MultiModelAnalyticsDto"},"examples":{"basicCount":{"summary":"Simple count example","value":{"models":[{"model":"User","operation":"count","filter":{"filters":{"status":"active"}}}]}},"groupByExample":{"summary":"GroupBy with aggregations","value":{"models":[{"model":"Order","operation":"groupBy","args":{"by":["status"],"aggregations":{"_sum":{"amount":true}}},"filter":{"dateField":"createdAt","startDate":"2023-01-01","endDate":"2023-12-31"}}]}},"multiModel":{"summary":"Multi-model request","value":{"models":[{"model":"User","operation":"count","filter":{"filters":{"status":"active"}}},{"model":"Product","operation":"findMany","args":{"take":5},"filter":{"search":"phone","searchFields":["name"]}}]}}}}}},"responses":{"201":{"description":""}},"tags":["Analytics"]}},"/analytics/user/top-five-active":{"post":{"operationId":"AnalyticsController_getTopFiveActiveUsers","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SopwiseAnalyticsFilterDto"}}}},"responses":{"201":{"description":""}},"tags":["Analytics"]}}},"info":{"title":"SOPWISE","description":"API documentation for the SOPWISE project","version":"0.0.1","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"bearer":{"scheme":"bearer","bearerFormat":"JWT","type":"http"}},"schemas":{"RegisterDto":{"type":"object","properties":{"email":{"type":"string","example":"test@test.com"},"name":{"type":"string","example":"John Doe"},"password":{"type":"string","example":"password"},"role":{"type":"string","example":"ASSISTANT"},"provider":{"type":"string","example":"sopwise","default":"sopwise"}},"required":["email","name","password","role","provider"]},"LoginDto":{"type":"object","properties":{"email":{"type":"string","example":"test@test.com"},"password":{"type":"string","example":"password"}},"required":["email","password"]},"UpdateUserDto":{"type":"object","properties":{"email":{"type":"string","example":"new_email@test.com"},"name":{"type":"string","example":"New Name"},"password":{"type":"string","example":"password"},"role":{"type":"string","example":"ASSISTANT"},"provider":{"type":"string","example":"sopwise","default":"sopwise"},"metaData":{"type":"string","example":"{\"key\": \"value\"}"}}},"CreateFileDTO":{"type":"object","properties":{"title":{"type":"string","example":"title"},"visibility":{"type":"string","example":"ADMIN"},"file":{"type":"string","format":"binary"},"createdAt":{"format":"date-time","type":"string","readOnly":true,"example":"2022-08-01T14:09:36.071+00:00"},"updatedAt":{"format":"date-time","type":"string","readOnly":true,"example":"2022-08-01T14:09:36.071+00:00"}},"required":["file","createdAt","updatedAt"]},"UpdateFileDTO":{"type":"object","properties":{"title":{"type":"string","example":"title"},"visibility":{"type":"string","example":"ADMIN"},"file":{"type":"string","format":"binary"},"createdAt":{"format":"date-time","type":"string","readOnly":true,"example":"2022-08-01T14:09:36.071+00:00"},"updatedAt":{"format":"date-time","type":"string","readOnly":true,"example":"2022-08-01T14:09:36.071+00:00"}}},"CreateApprovalDto":{"type":"object","properties":{"description":{"type":"string","description":"Description of the approval request","example":"Request for project access"},"status":{"type":"string","description":"Status of the approval","enum":["PENDING","APPROVED","REJECTED"],"default":"PENDING"},"approvedBy":{"type":"string","description":"ID of the user approving the request","example":"123e4567-e89b-12d3-a456-426614174000"},"allowedRole":{"type":"array","description":"Roles allowed for this approval","items":{"type":"string","enum":["ADMIN","AUTHOR","ASSISTANT","TECHNICIAN","SCIENTIST","VP"]}}},"required":["description"]},"UpdateApprovalDto":{"type":"object","properties":{"description":{"type":"string","description":"Description of the approval request","example":"Request for project access"},"status":{"type":"string","description":"Status of the approval","enum":["PENDING","APPROVED","REJECTED"],"default":"PENDING"},"approvedBy":{"type":"string","description":"ID of the user approving the request","example":"123e4567-e89b-12d3-a456-426614174000"},"allowedRole":{"type":"array","description":"Roles allowed for this approval","items":{"type":"string","enum":["ADMIN","AUTHOR","ASSISTANT","TECHNICIAN","SCIENTIST","VP"]}}}},"CreateSopDto":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the SOP","format":"uuid"},"title":{"type":"string","description":"Title of the SOP","minLength":1,"maxLength":255,"example":"SOP Title"},"description":{"type":"string","description":"Description of the SOP","minLength":1,"maxLength":1000,"example":"This is an SOP description."},"status":{"type":"string","enum":["DRAFT","PUBLISHED","LISTED"],"description":"Current status of the SOP","example":"DRAFT"},"category":{"type":"string","description":"Category of the SOP","maxLength":100,"example":"Operations"},"isListed":{"type":"boolean","description":"Indicates if the SOP is listed","default":false},"isDeleted":{"type":"boolean","description":"Indicates if the SOP is deleted","default":false},"publishedAt":{"type":"string","description":"Date when the SOP was published","format":"date-time","example":"2024-12-01T12:00:00Z"},"metaData":{"type":"object","description":"Additional meta data for the SOP","example":{"key":"value"}},"content":{"type":"string","description":"Content of the SOP","minLength":1,"maxLength":1000000,"example":"SOP detailed content here."},"createdAt":{"type":"string","description":"Date when the SOP was created","format":"date-time","example":"2024-12-01T12:00:00Z"},"updatedAt":{"type":"string","description":"Date when the SOP was last updated","format":"date-time","example":"2024-12-01T12:00:00Z"},"contentUrl":{"type":"string","description":"URL for the SOP content","format":"url","maxLength":500,"example":"https://example.com/sop.pdf"}},"required":["title","description","isListed","isDeleted","createdAt","updatedAt"]},"AddCommentDto":{"type":"object","properties":{"comment":{"type":"string","description":"The content of the comment.","example":"This is a comment."},"status":{"type":"string","description":"The status of the comment, either RESOLVED or UNRESOLVED.","enum":["RESOLVED","UNRESOLVED"],"default":"UNRESOLVED","example":"UNRESOLVED"},"contentId":{"type":"string","description":"The ID of the content (SOP) the comment belongs to.","example":"123e4567-e89b-12d3-a456-426614174000"},"isDeleted":{"type":"boolean","description":"Flag to indicate if the comment is deleted.","default":false,"example":false},"parentId":{"type":"string","description":"The ID of the parent comment, if it is a reply.","example":"123e4567-e89b-12d3-a456-426614174000"},"createdAt":{"type":"string","description":"The timestamp when the comment was created. Managed by the database.","example":"2024-12-16T08:00:00.000Z"},"updatedAt":{"type":"string","description":"The timestamp when the comment was last updated. Managed by the database.","example":"2024-12-16T09:00:00.000Z"},"selectedText":{"type":"string","description":"The selected text that the comment refers to.","example":"This is the selected text."},"authorId":{"type":"string","description":"Author of the comment","example":"123e4567-e89b-12d3-a456-426614174000"},"htmlString":{"type":"string","description":"The selected HTML string of the comment.","example":"<p>This is the comment.</p>"},"uniqueId":{"type":"string","description":"Unique Id to find and patch the content of SOP","example":"comment-[some date]"}},"required":["comment","contentId"]},"CreateCommentDto":{"type":"object","properties":{"comment":{"type":"string","description":"The content of the comment.","example":"This is a comment."},"status":{"type":"string","description":"The status of the comment, either RESOLVED or UNRESOLVED.","enum":["RESOLVED","UNRESOLVED"],"default":"UNRESOLVED","example":"UNRESOLVED"},"contentId":{"type":"string","description":"The ID of the content (SOP) the comment belongs to.","example":"123e4567-e89b-12d3-a456-426614174000"},"isDeleted":{"type":"boolean","description":"Flag to indicate if the comment is deleted.","default":false,"example":false},"parentId":{"type":"string","description":"The ID of the parent comment, if it is a reply.","example":"123e4567-e89b-12d3-a456-426614174000"},"createdAt":{"type":"string","description":"The timestamp when the comment was created. Managed by the database.","example":"2024-12-16T08:00:00.000Z"},"updatedAt":{"type":"string","description":"The timestamp when the comment was last updated. Managed by the database.","example":"2024-12-16T09:00:00.000Z"},"selectedText":{"type":"string","description":"The selected text that the comment refers to.","example":"This is the selected text."},"authorId":{"type":"string","description":"Author of the comment","example":"123e4567-e89b-12d3-a456-426614174000"},"htmlString":{"type":"string","description":"The selected HTML string of the comment.","example":"<p>This is the comment.</p>"},"uniqueId":{"type":"string","description":"Unique Id to find and patch the content of SOP","example":"comment-[some date]"}},"required":["comment","contentId"]},"StepDto":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the step","format":"uuid"},"logId":{"type":"string","description":"Associated experiment log id","format":"uuid"},"time_taken":{"type":"number","description":"Time taken for this step in seconds","example":120},"title":{"type":"string","description":"Title for the step"},"subtitle":{"type":"string","description":"Subtitle for the step"},"tenant":{"type":"string","description":"Tenant identifier","default":"sopwise"},"createdAt":{"type":"string","description":"Creation date of the step","format":"date-time"},"updatedAt":{"type":"string","description":"Last update date of the step","format":"date-time"},"form_data":{"type":"object","description":"Form data as JSON object"},"meta_data":{"type":"object","description":"Additional meta data as JSON object"}},"required":["id","logId","time_taken","title","subtitle","tenant","createdAt","updatedAt"]},"ExperimentLogDto":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the experiment log","format":"uuid"},"sopId":{"type":"string","description":"SOP identifier"},"userId":{"type":"string","description":"User identifier"},"status":{"type":"string","description":"Status of the experiment log","default":"PENDING"},"createdAt":{"type":"string","description":"Creation date of the experiment log","format":"date-time"},"updatedAt":{"type":"string","description":"Last update date of the experiment log","format":"date-time"},"tenant":{"type":"string","description":"Tenant identifier","default":"sopwise"},"total_time":{"type":"number","description":"Total time taken for the experiment log","example":3600},"meta_data":{"type":"object","description":"Meta data as a JSON object"},"completion_percentage":{"type":"number","description":"Completion percentage of the experiment log","example":50},"steps":{"description":"List of steps","type":"array","items":{"$ref":"#/components/schemas/StepDto"}},"url":{"type":"string","description":"URL of the experiment log"}},"required":["id","sopId","userId","status","createdAt","updatedAt","tenant","steps","url"]},"SopwiseAnalyticsFilterDto":{"type":"object","properties":{"filters":{"type":"object","description":"Filters to apply on the analytics query","example":{"isListed":true,"isDeleted":false}},"role":{"type":"string","description":"Role to filter results by","example":"ADMIN"},"search":{"type":"string","description":"Search term to filter results","example":"example search term"},"searchFields":{"description":"Fields to search in","example":["title","description"],"type":"array","items":{"type":"string"}},"dateField":{"type":"string","description":"Field to apply date filters on","example":"createdAt"},"startDate":{"type":"string","description":"Start date for filtering results","example":"2023-01-01T00:00:00Z"},"endDate":{"type":"string","description":"End date for filtering results","example":"2023-12-31T23:59:59Z"}}},"ModelAnalyticsRequestDto":{"type":"object","properties":{"model":{"type":"string","description":"The model name for the analytics request","example":"Sop","enum":["SopWiseUser","Approval","Sop","FileSettings","Comment","ExperimentLog","Step"]},"operation":{"type":"string","description":"The operation to perform on the model","enum":["count","groupBy","findMany","aggregate"],"example":"count"},"args":{"type":"object","description":"Additional arguments for the operation","example":{"includeCount":true,"fields":{"avg":["total_time","completion_percentage"]}}},"filter":{"description":"Filter criteria for the analytics request","allOf":[{"$ref":"#/components/schemas/SopwiseAnalyticsFilterDto"}]}},"required":["model","operation"]},"MultiModelAnalyticsDto":{"type":"object","properties":{"models":{"description":"Array of model analytics requests","type":"array","items":{"$ref":"#/components/schemas/ModelAnalyticsRequestDto"}}},"required":["models"]}}}}